# Edit this configuration file to define what should be installed on
# your system. Help is available in the configuration.nix(5) man page, on
# https://search.nixos.org/options and in the NixOS manual (`nixos-help`).

{ config, lib, pkgs, ... }:

let
  impermanence = builtins.fetchTarball "https://github.com/nix-community/impermanence/archive/master.tar.gz";
in
{
  imports =
    [ 
      "${impermanence}/nixos.nix"
      # Include the results of the hardware scan.
      ./hardware-configuration.nix
      ../../modules/sops.nix
    ];
    
  # TODO: variablize
  nix.settings.experimental-features = [ "nix-command" "flakes" ];

# Impermanence
  # filesystems
    fileSystems."/".options = [ "compress=zstd" "noatime" ];
    fileSystems."/home".options = [ "compess=zstd" ];
    fileSystems."/nix".options = [ "compress=zstd" "noatime" ];
    fileSystems."/persist".options = [ "compress=zstd" "noatime" ];
    fileSystems."/persist".neededForBoot = true;
    fileSystems."/var/log".options = [ "compress=zstd" "noatime" ];
    fileSystems."/var/log".neededForBoot = true;

# configure impermanence
  # TODO: variablize
  environment.persistence."/persist" = {
    directories = [
      "/etc/nixos"
    ];
    files = [
      "/etc/machine-id"
      "/etc/ssh/ssh_host_ed25519_key"
      "/etc/ssh/ssh_host_ed25519_key.pub"
      # "/etc/ssh/ssh_host_rsa_key"
      # "/etc/ssh/ssh_host_rsa_key.pub"
    ];
  };
  # TODO: variablize
  security.sudo.extraConfig = ''
    # rollback results in sudo lectures after each reboot
    Defaults lecture = never
  '';

  


# Use the systemd-boot EFI boot loader.
  boot.loader.systemd-boot.enable = true;
# TODO: uefi/bios switch
  boot.loader.efi.canTouchEfiVariables = true;

# Hostname
  # TODO: variablize
  networking.hostName = "nire-lysithea"; # Define your hostname.

  # Pick only one of the below networking options.
  # networking.wireless.enable = true;  # Enables wireless support via wpa_supplicant.
  networking.networkmanager.enable = true;  # Needs to be 'true' for KDE networking

  # Set your time zone.
  time.timeZone = "America/New_York";
  

# Internationalisation properties.
  # TODO: variablize
  i18n.defaultLocale = "en_US.UTF-8";



# Enable the X11 windowing system.
  # TODO: x11/wayland switch
  services.xserver.enable = true;

# Enable the GNOME Desktop Environment.
  #TODO: variablize so it's a choice of DM and WM
  services.xserver.displayManager.gdm.enable = true;
  services.xserver.desktopManager.gnome.enable = true;
  


# User
  # Define a user account. Don't forget to set a password with ‘passwd’.
  # TODO: variablize
  users.users.elly = {
    isNormalUser = true;
    extraGroups = [ "wheel" ]; # Enable ‘sudo’ for the user.
    packages = with pkgs; [
      firefox
      tree
      micro
      git
    ];
    # TODO: variablize sshkey
    openssh.authorizedKeys.keys = [ "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILk2lST7kOSRlanAKhl42b9IQib1hzrbxlR5pve/X37D elly@nire-lysithea" ];

    passwordFile = "/persist/passwords/user";
  };

  # List packages installed in system profile. To search, run:
  # $ nix search wget
  environment.systemPackages = with pkgs; [
    coreutils
    micro # Do not forget to add an editor to edit configuration.nix! The Nano editor is also installed by default.
    wget
    curl
    git
    bash
    zsh
  ];


# Firewall.
  networking.firewall = {
    enable = true;
    allowedTCPPorts = [          
                        22 # ssh
                      ];
    allowedTCPPortRanges = [  
                            {  # kde-connect TCP
                              from = 1714;
                              to   = 1764;    
                            }
                           ];
    allowedUDPPorts = [                            
                        
                      ];
    allowedUDPPortRanges = [
                            { # kde-connect UDP 
                              from = 1714;
                              to   = 1764;
                            }   
                           ];
  };


# shells
  environment.shells = [ 
                          pkgs.zsh
                          pkgs.bash
                       ];
  

  # List services that you want to enable:

# # Copy the NixOS configuration file and link it from the resulting system
  # (/run/current-system/configuration.nix). This is useful in case you
  # accidentally delete configuration.nix.
  # system.copySystemConfiguration = true;

  # This option defines the first version of NixOS you have installed on this particular machine,
  # and is used to maintain compatibility with application data (e.g. databases) created on older NixOS versions.
  #
  # Most users should NEVER change this value after the initial install, for any reason,
  # even if you've upgraded your system to a new NixOS release.
  #
  # This value does NOT affect the Nixpkgs version your packages and OS are pulled from,
  # so changing it will NOT upgrade your system.
  #
  # This value being lower than the current NixOS release does NOT mean your system is
  # out of date, out of support, or vulnerable.
  #
  # Do NOT change this value unless you have manually inspected all the changes it would make to your configuration,
  # and migrated your data accordingly.
  #
  # For more information, see `man configuration.nix` or https://nixos.org/manual/nixos/stable/options#opt-system.stateVersion .
  system.stateVersion = "23.11"; # Did you read the comment?

# services
  services.syncthing = {
    enable = true;
    dataDir = "/home/elly/syncthing";
    openDefaultPorts = true;
    configDir = "/home/elly/.config/syncthing";
    user = "elly";
    group = "users";
    guiAddress = "0.0.0.0:8384";
    declarative = {
      overrideDevices = true; 
      overrideFolders = true;
      devices = {
        "nire-durandal"    = { id = "5FTZQAS-KEE5XI5-BHCQNFQ-E3S2QEA-KVOQAID-Q55I2Y3-YH4WM6N-2LA7XAN"; };
        "nire-sif"         = { id = "4AWC42H-PXBIBQB-OZDROYJ-6WZVR6V-WXBZ4AU-UFH6EJM-WWZWA3X-XFQ3TAS"; };
        "nire-galatea"     = { id = "PCIR5O7-73WQN63-DXAVK3Z-G7QEWUY-R2BFF5P-TVCYFKU-LBRI3N3-IA477QL"; };
        # "nire-lysithea"    = { id = "L7HXAZQ-DTHEPV7-TSOD6QR-O46ZIQW-EULYYJV-JNUV6E2-23FXC64-QOYELQW"; };
        "nire-iona"        = { id = "BEC6DM5-5Y6L6ZP-OSMJ7MQ-HQIWW25-WIG24JV-BOQZGQW-LIFZPA5-VEXKAAZ"; };
        "nire-tenacity"    = { id = "K73HCBQ-G2GS23G-BXNMXEO-ILOBGXD-MTLWL6Z-BI2S5XR-HX4OCBN-6VMP5AN"; };
      };  
      folders = { 
        "code" = { 
          path = "/home/elly/code";
          devices = [ "nire-galatea" ];
          versioning = {
            type = "staggered";
            params = { 
              cleanInterval = "3600";
              maxAge = "15768000";
            };
          };
        };  
        "sync" = {
          path = "/home/elly/sync";
          devices = [ "nire-galatea" ];
          versioning = { 
            type = "simple";
            params = { keep = 5; };
          };
        }; 
      };
    };
  };









